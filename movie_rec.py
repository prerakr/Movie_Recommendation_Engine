# -*- coding: utf-8 -*-
"""movie_rec.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dhh71dpSBlXbGYo0hHf6u7a0eY0qJ1eQ
"""

import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('movie_dataset.csv')

df.head(3)

df.shape

features = ['original_title','keywords', 'cast', 'genres', 'director']
df[features].head(3)

for feature in features:
  df[feature] = df[feature].fillna('')

def combine_features(row):
  return row['keywords']+" "+row['cast']+" "+row['genres']+" "+row['director']

df['combined_features']=df.apply(combine_features, axis=1)

df.head(3)

count_matrix = CountVectorizer().fit_transform(df['combined_features'])

cosine_sim = cosine_similarity(count_matrix)
print(cosine_sim)

cosine_sim.shape

def get_title_from_index(index):
  return df[df.index == index]['title'].values[0]
def get_index_from_title(title):
  return df[df.title == title]['index'].values[0]

movie_user_likes = 'Avatar'
movie_index = get_index_from_title(movie_user_likes)

movie_index

#Enumerate through all the similarity scores of the selected movie

similar_movies = list(enumerate(cosine_sim[movie_index]))
similar_movies

sorted_similar_movies = sorted(similar_movies, key = lambda x:x[1], reverse = True)[1:]

sorted_similar_movies

i=0
print('Top 10 similar movies to ' + movie_user_likes + ' are: ')
for element in sorted_similar_movies:
  print(get_title_from_index(element[0]))
  i=i+1
  if i>=10:
    break